■ NODE.js 설치
    - JS 실행 --> (브라우저 없이 JS가 실행하게 해준다.)
    - https://nodejs.org/ko/에 들어가서 꼭 LTS 버전으로 다운로드해준다.
    - 설치확인
        터미널 / node --version 입력해서 version확인

■ VSCode 환경설정 
    - 단축아이콘 --> 우클릭 --> 속성 --> 호환성 --> 관리자 권한으로 실행하기 check,적용 후 재실행
    - terminal 설정변경(powershall --> command로!)
        터미널실행 --> 터미널창 --> 옵션(plus 옆에 down chevron모양) --> 기본 프로필 선택 --> command prompt로 설정
    - setting.json에 하단의 내용 추가!
        "emmet.includeLanguages":{
         "javascript":"javascriptreact"
        }

■ VSCode 확장        
    - reactJS code snippets
    - Auto Import

■ create react app 설치
    (webpack + babel + reactJS)
    - babel : JS로 html로 코딩을 하면 html element로 직접적으로 만들어줌
    - 터미널 --> npm i (install) -g (global) create-react-app
    - create-react-app -V (version)

■ terminal 명령어
    - F1 + TERMINAL(꼭 대문자로!)
    - cls --> 썼던 명령들이 지워짐.
    - cd(change directory) ../(한단계 상위 폴더로 이동), cd 폴더명 (하위폴더로 이동)

■ react project 생성
    - create-react-app 폴더명(임의의 폴더이름으로!)

■ src/app.js --> 해당 코드로 reset!
    const App = () => {
    return (
    <>
      app
    </>
    );
    };
export default App;

■ src/index.js --> 해당 코드로 reset!
    import React from 'react';
    import ReactDOM from 'react-dom/client';
    import App from './App';

    ReactDOM.createRoot(document.getElementById('root')).render(
    <>
        <App />
    </>,
    );
■ (가상)서버실행

    - 실행 : terminal --> npm start
    - 종료 : ctrl + C

■ 베포(deploy)
    ● root폴더에 베포시
        - 먼저 서버중지(ctrl + C)
        - npm run build
        - build폴더안의 파일들을 root폴더에 업로드(dothome에서는 html폴더)

    ● root폴더의 하위폴더 베포시
        - 항상! project 완성 후에 베포할것!!!!
        - package.json파일에 key추가
            --> 'homepage' : '/폴더명'
        - build폴더안의 파일들을 등록한 폴더안에 업로드함